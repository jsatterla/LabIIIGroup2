#include  "msp430g2253.h"

unsigned int peak = 0;

void ConfigureAdc(void);

void main(void)
{
    {
        WDTCTL = WDTPW + WDTHOLD;       // Stop WDT
        BCSCTL1 = CALBC1_16MHZ;          // 16 MHz
        BCSCTL2 = SELM_0 + DIVM_0 + DIVS_0;
        P1SEL |= BIT3;                  // ADC pin P1.3
        ConfigureAdc();                 // ADC set-up
        __enable_interrupt();           // Enable interrupts.


        while (1)
        {
            ADC10CTL0 |= ENC + ADC10SC;     // Sampling and conversion start
            __bis_SR_register(GIE);        // Low Power Mode 0 with interrupts enabled
            peak = ADC10MEM;               // Assigns the value held in ADC10MEM to the integer called peak

        }

    }
}

// ADC10 interrupt service routine
#pragma vector=ADC10_VECTOR
__interrupt void ADC10_ISR(void)
{
    __bic_SR_register_on_exit(GIE);        // Return
}

// Function containing ADC set-up
void ConfigureAdc(void)
{

    ADC10CTL1 = INCH_3 + ADC10DIV_3;                      // Channel 3, ADC10CLK/3
    ADC10CTL0 = SREF_0 + ADC10SHT_3 + ADC10ON + ADC10IE;  // Vcc & Vss as reference, Sample and hold for 64 Clock cycles, ADC on, ADC interrupt enable
    ADC10AE0 |= BIT3;                                     // ADC input enable P1.3
}






//while (ADC10CTL1 & BUSY);
//     {
//
//     }
